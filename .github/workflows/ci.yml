name: Astro CI/CD + NVD Scan  # Nombre del workflow a visualizar en GitHub Actions

on:
  push:
    branches: [ "main" ]  # Se activa en push a la rama main
  pull_request:
    branches: [ "main" ]  # Se activa en pull requests a la rama main

jobs:
  build:  # Definición del job principal
    runs-on: ubuntu-latest  # Se ejecuta en un runner con Ubuntu

    steps:  # Lista de pasos a ejecutar
      - name: Checkout código  
        # Clona el repositorio en el runner
        uses: actions/checkout@v4

      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 8

      # Instalar Node.js (ajusta versión si usas otra)
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      # Instalar dependencias
      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      # Construir el sitio
      - name: Build Astro site
        run: pnpm run build

      # Subir artefacto de build (opcional, por si lo necesitas para otro job)
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: astro-dist
          path: dist/

      - name: Escanear vulnerabilidades con NVD  
        # Instala el escáner de vulnerabilidades de Python y lo ejecuta para analizar la dependencia "astro"
        env:
          NVD_API_KEY: ${{ secrets.NVD_API_KEY }}  # Se pasa la API key desde los secrets del repositorio
        run: |
          pip install cve-vulnerability-scanner  # Instala la herramienta de escaneo
          echo "astro,5.11.0" > deps.csv         # Crea un archivo CSV con la dependencia "astro" y su versión
          cve-vulnerability-scanner deps.csv -o reporte.md  # Ejecuta el escaneo y genera el reporte